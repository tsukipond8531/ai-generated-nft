/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTAuction,
  NFTAuctionInterface,
} from "../../contracts/NFTAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_nftContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NFTAuction__AuctionIsClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTAuction__AuctionIsRunning",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTAuction__BidderWithdrawFundFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTAuction__InsufficientBidFundToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTAuction__NotERC721Calling",
    type: "error",
  },
  {
    inputs: [],
    name: "NFTAuction__OwnerWithdrawFundFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amounBid",
        type: "uint256",
      },
    ],
    name: "AuctionEnd",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "highestBidAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct NFTAuction.Auction",
        name: "newAuction",
        type: "tuple",
      },
    ],
    name: "NewAuctionStart",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "previousBidder",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "highestBidAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct NFTAuction.Auction",
        name: "auction",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewHighestBidder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bidOnNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuctionDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuctionState",
    outputs: [
      {
        internalType: "enum NFTAuction.AuctionState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bidder",
        type: "address",
      },
    ],
    name: "getBidderRefundAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentAuction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "highestBidAmount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTAuction.Auction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNftContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenUri",
        type: "string",
      },
    ],
    name: "startAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620023073803806200230783398181016040528101906200003791906200024c565b620000576200004b6200011360201b60201c565b6200011b60201b60201c565b6200007367635dcb444dcd886f60c01b620001df60201b60201c565b6200008f6723dddb0f68b80a3e60c01b620001df60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000df67e532edea5107bb3f60c01b620001df60201b60201c565b60008060146101000a81548160ff021916908360018111156200010757620001066200027e565b5b021790555050620002ad565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021482620001e7565b9050919050565b620002268162000207565b81146200023257600080fd5b50565b60008151905062000246816200021b565b92915050565b600060208284031215620002655762000264620001e2565b5b6000620002758482850162000235565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b608051612029620002de6000396000818161039201528181610f6c015281816110e3015261161401526120296000f3fe6080604052600436106100dd5760003560e01c806373dc756c1161007f578063a4819a9711610059578063a4819a9714610243578063dcb66f1214610280578063f2fde38b146102ab578063fe67a54b146102d4576100dd565b806373dc756c146101c457806378cb51af146101ed5780638da5cb5b14610218576100dd565b806337271cc7116100bb57806337271cc7146101545780633ccfd60b1461016b578063667c99de14610182578063715018a6146101ad576100dd565b806308bfc300146100e2578063150b7a021461010d5780632659b13c1461014a575b600080fd5b3480156100ee57600080fd5b506100f76102eb565b6040516101049190611938565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190611a56565b61033e565b6040516101419190611b19565b60405180910390f35b6101526106b1565b005b34801561016057600080fd5b50610169610b07565b005b34801561017757600080fd5b50610180610daf565b005b34801561018e57600080fd5b50610197610f2c565b6040516101a49190611b43565b60405180910390f35b3480156101b957600080fd5b506101c2610f90565b005b3480156101d057600080fd5b506101eb60048036038101906101e69190611bb4565b610fa4565b005b3480156101f957600080fd5b50610202611184565b60405161020f9190611c10565b60405180910390f35b34801561022457600080fd5b5061022d6111cb565b60405161023a9190611b43565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190611c2b565b6111f4565b6040516102779190611c10565b60405180910390f35b34801561028c57600080fd5b50610295611279565b6040516102a29190611cde565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611c2b565b61136f565b005b3480156102e057600080fd5b506102e96113f2565b005b60006103016732afec64eacaf7f860c01b61172f565b610315676e4f29ca3193063960c01b61172f565b61032967361dd5d4df90446460c01b61172f565b600060149054906101000a900460ff16905090565b6000610354673e156b7dc9e9a10360c01b61172f565b61036867a0557dcbafa9dfb960c01b61172f565b61037c677d2c6170a90908a260c01b61172f565b610390670ddaef4b2390ed2c60c01b61172f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043d576103f7670bd23c42b8026d3660c01b61172f565b61040b67515a9174357baf6060c01b61172f565b6040517fcbe3282800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045167522851a2caa273c560c01b61172f565b61046567c446bc88c2d2bea960c01b61172f565b61047967ce64efc894727e6660c01b61172f565b61048d6745546886e1bfcdc960c01b61172f565b6104a167a846fccef9bb2b8460c01b61172f565b6001600060146101000a81548160ff021916908360018111156104c7576104c66118c1565b5b02179055506104e067200bdc5267254b3060c01b61172f565b6104f467d231ad3a4dfb05ce60c01b61172f565b60006040518060a0016040528042815260200162069780426105169190611d28565b81526020018681526020016105296111cb565b73ffffffffffffffffffffffffffffffffffffffff168152602001662386f26fc1000081525090506105656719683ae8ae2746be60c01b61172f565b61057967907bbf6d142247b160c01b61172f565b600281908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040155505061062a67aeffb8c1f73b51d660c01b61172f565b61063e677ae1ccc4fd425aa860c01b61172f565b7f52cf86ea7b171700f88e16d46eab3d51ded34c5ecd49ca3d30d51d5f40abda068160405161066d9190611cde565b60405180910390a1610689670e5101e3c88f804260c01b61172f565b61069d67cbbd164316f0555860c01b61172f565b63150b7a0260e01b91505095945050505050565b6106c5671d0b6f8f6c92d53160c01b61172f565b6106d96758ec42d232958e3760c01b61172f565b6106ed671d88769b47161b5a60c01b61172f565b60006001811115610701576107006118c1565b5b600060149054906101000a900460ff166001811115610723576107226118c1565b5b036107825761073c6759c030e0b1f892c260c01b61172f565b610750673dbfb1618d04f1d860c01b61172f565b6040517f52f4ee9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610796671b05571a067e164d60c01b61172f565b6107aa67aa82f8ccf9585b6d60c01b61172f565b6107be67f96208d894282a4260c01b61172f565b60006107c8611279565b90506107de67395fb89f00306e4d60c01b61172f565b6107f2676e18043d965d3a9f60c01b61172f565b60008160800151905061080f6721c5fc10ef61b16360c01b61172f565b6108236777bba12bc1de4e3e60c01b61172f565b80341115610a845761083f671192534c3fd93de560c01b61172f565b61085367a63a8cae8d37f73160c01b61172f565b61086767c3a9fdf8214c117f60c01b61172f565b6000826060015190506108846715d767b08303651e60c01b61172f565b81600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d39190611d28565b925050819055506108ee674b824e0b18405ac160c01b61172f565b33836060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061093a6780773900dca85ff060c01b61172f565b34836080018181525050610958676166902c1a7251e760c01b61172f565b8260026001548154811061096f5761096e611d5c565b5b906000526020600020906005020160008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040155905050610a0367690c64b7b02a665460c01b61172f565b610a17677285e81d10969f9f60c01b61172f565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6e719138f105b40d8d745744a7011863c5633387ac9ec154040c324999ba0ddd8534604051610a76929190611d8b565b60405180910390a350610b03565b610a9867b7caf3fa01fd263a60c01b61172f565b610aac67671faa137d29509f60c01b61172f565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610afb9190611d28565b925050819055505b5050565b610b1b6732c7466038b5e98760c01b61172f565b610b2f673bc6b42573f8734260c01b61172f565b610b436787988a9e5f2977de60c01b61172f565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610b9b676a08c810fd1272b960c01b61172f565b610baf672d095b3cf9d88f9160c01b61172f565b60008111610c1157610bcb67cc2023c2549040de60c01b61172f565b610bdf67852c5b8d39b45f1760c01b61172f565b6040517f0f59fb2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c2567f9d2abd86c11d37d60c01b61172f565b610c39679d76ad408b9503ac60c01b61172f565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055610c9067ab4199a2d2af9b1d60c01b61172f565b610ca467f80c867530c8782f60c01b61172f565b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610cca90611de5565b60006040518083038185875af1925050503d8060008114610d07576040519150601f19603f3d011682016040523d82523d6000602084013e610d0c565b606091505b50509050610d246750250872ef784e4a60c01b61172f565b610d386791a53688f0e1e47560c01b61172f565b80610d9757610d5167501c65cd84978a5160c01b61172f565b610d6567c70c1b07b72f1ee460c01b61172f565b6040517f34c346de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dab673ffd52bcd42adf3360c01b61172f565b5050565b610dc367bf0adfa6c66c152360c01b61172f565b610dcb611732565b610ddf6703b80b5c4a027ac160c01b61172f565b610df36735859d74f244973260c01b61172f565b610e0767e2fa43f9f9afcead60c01b61172f565b610e1b67187726a1cdafe59360c01b61172f565b6000610e256111cb565b73ffffffffffffffffffffffffffffffffffffffff1647604051610e4890611de5565b60006040518083038185875af1925050503d8060008114610e85576040519150601f19603f3d011682016040523d82523d6000602084013e610e8a565b606091505b50509050610ea267b80543a0fdf7a46d60c01b61172f565b610eb667e30259ab6a97097a60c01b61172f565b80610f1557610ecf6702cafe40ef625e4f60c01b61172f565b610ee3671d17c104734b822160c01b61172f565b6040517fdec3d36a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f29677d6c88e0f6140e9260c01b61172f565b50565b6000610f42674212f11e9603efdb60c01b61172f565b610f5667011162026ec671ca60c01b61172f565b610f6a67d57706b0bd4f70df60c01b61172f565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b610f98611732565b610fa260006117b0565b565b610fb867b0479fa2f29c0d8b60c01b61172f565b610fc0611732565b610fd467b13feb3d8f6f635960c01b61172f565b610fe867847523d30595a23360c01b61172f565b610ffc67d5c333b82ef5cf8360c01b61172f565b6110106784f9e8115e49db1760c01b61172f565b60006001811115611024576110236118c1565b5b600060149054906101000a900460ff166001811115611046576110456118c1565b5b146110a55761105f67777651dfb50fb54960c01b61172f565b6110736722d06d1c4ae3160560c01b61172f565b6040517f869ea31d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110b9674709d87fcef59e4b60c01b61172f565b6110cd674feb22d7094cb32960c01b61172f565b6110e16737347d16fff9d74d60c01b61172f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630a5d0bb283836040518363ffffffff1660e01b815260040161113c929190611e58565b6020604051808303816000875af115801561115b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117f9190611e91565b505050565b600061119a6705c68dc8f59bc16960c01b61172f565b6111ae67b4954a519bd4392c60c01b61172f565b6111c267ac4eb68dd80b8bf060c01b61172f565b62069780905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061120a67ea4c3d403cc6705f60c01b61172f565b61121e672b44834832fbebfc60c01b61172f565b6112326708cadb1d0c705e1060c01b61172f565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61128161187c565b61129567c4e1ecdf646767fa60c01b61172f565b6112a967c854ced48a30c9c260c01b61172f565b6112bd67bf4c5234c246108460c01b61172f565b6002600154815481106112d3576112d2611d5c565b5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050905090565b611377611732565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90611f30565b60405180910390fd5b6113ef816117b0565b50565b611406671d91b385a16a17c160c01b61172f565b61141a677283ae3d1b83812f60c01b61172f565b61142e6794a882aeca6a7fee60c01b61172f565b6000611438611279565b905061144e6786a8b99cb5c69dbe60c01b61172f565b61146267d8a9ce85b7c5866060c01b61172f565b600180811115611475576114746118c1565b5b600060149054906101000a900460ff166001811115611497576114966118c1565b5b146114f6576114b067483aa4e4b848b70e60c01b61172f565b6114c467048c7ded1366ccb060c01b61172f565b6040517f52f4ee9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61150a67946836408990aaee60c01b61172f565b61151e67ea5d80206c62727260c01b61172f565b61153267311d5ce48704606560c01b61172f565b80602001514210156115985761155267b40ed7114e7c9d7c60c01b61172f565b611566677146fc020b99c5e460c01b61172f565b6040517f869ea31d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115ac677d33227b44d81a3e60c01b61172f565b6115c06792b06a727c4f90a160c01b61172f565b60008060146101000a81548160ff021916908360018111156115e5576115e46118c1565b5b02179055506115fe67f8e8aeffddef3ee160c01b61172f565b61161267f200b8a53760559a60c01b61172f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342842e0e30836060015184604001516040518463ffffffff1660e01b815260040161167793929190611f50565b600060405180830381600087803b15801561169157600080fd5b505af11580156116a5573d6000803e3d6000fd5b505050506116bd67da4ead311431e75d60c01b61172f565b6116d1677d36b665492ff3a960c01b61172f565b8060400151816060015173ffffffffffffffffffffffffffffffffffffffff167f547f741adc14a68529e0873c12b647ca383a8c08b758de4f9da208ccf150dcf283608001516040516117249190611c10565b60405180910390a350565b50565b61173a611874565b73ffffffffffffffffffffffffffffffffffffffff166117586111cb565b73ffffffffffffffffffffffffffffffffffffffff16146117ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a590611fd3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a00160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611901576119006118c1565b5b50565b6000819050611912826118f0565b919050565b600061192282611904565b9050919050565b61193281611917565b82525050565b600060208201905061194d6000830184611929565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119888261195d565b9050919050565b6119988161197d565b81146119a357600080fd5b50565b6000813590506119b58161198f565b92915050565b6000819050919050565b6119ce816119bb565b81146119d957600080fd5b50565b6000813590506119eb816119c5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611a1657611a156119f1565b5b8235905067ffffffffffffffff811115611a3357611a326119f6565b5b602083019150836001820283011115611a4f57611a4e6119fb565b5b9250929050565b600080600080600060808688031215611a7257611a71611953565b5b6000611a80888289016119a6565b9550506020611a91888289016119a6565b9450506040611aa2888289016119dc565b935050606086013567ffffffffffffffff811115611ac357611ac2611958565b5b611acf88828901611a00565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b1381611ade565b82525050565b6000602082019050611b2e6000830184611b0a565b92915050565b611b3d8161197d565b82525050565b6000602082019050611b586000830184611b34565b92915050565b60008083601f840112611b7457611b736119f1565b5b8235905067ffffffffffffffff811115611b9157611b906119f6565b5b602083019150836001820283011115611bad57611bac6119fb565b5b9250929050565b60008060208385031215611bcb57611bca611953565b5b600083013567ffffffffffffffff811115611be957611be8611958565b5b611bf585828601611b5e565b92509250509250929050565b611c0a816119bb565b82525050565b6000602082019050611c256000830184611c01565b92915050565b600060208284031215611c4157611c40611953565b5b6000611c4f848285016119a6565b91505092915050565b611c61816119bb565b82525050565b611c708161197d565b82525050565b60a082016000820151611c8c6000850182611c58565b506020820151611c9f6020850182611c58565b506040820151611cb26040850182611c58565b506060820151611cc56060850182611c67565b506080820151611cd86080850182611c58565b50505050565b600060a082019050611cf36000830184611c76565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d33826119bb565b9150611d3e836119bb565b9250828201905080821115611d5657611d55611cf9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060c082019050611da06000830185611c76565b611dad60a0830184611c01565b9392505050565b600081905092915050565b50565b6000611dcf600083611db4565b9150611dda82611dbf565b600082019050919050565b6000611df082611dc2565b9150819050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000611e378385611dfa565b9350611e44838584611e0b565b611e4d83611e1a565b840190509392505050565b60006020820190508181036000830152611e73818486611e2b565b90509392505050565b600081519050611e8b816119c5565b92915050565b600060208284031215611ea757611ea6611953565b5b6000611eb584828501611e7c565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f1a602683611dfa565b9150611f2582611ebe565b604082019050919050565b60006020820190508181036000830152611f4981611f0d565b9050919050565b6000606082019050611f656000830186611b34565b611f726020830185611b34565b611f7f6040830184611c01565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fbd602083611dfa565b9150611fc882611f87565b602082019050919050565b60006020820190508181036000830152611fec81611fb0565b905091905056fea264697066735822122046cbef992e22431a3fb482949f2df0ed9372da35fc889e248ed4c84723db3aca64736f6c63430008120033";

type NFTAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTAuction__factory extends ContractFactory {
  constructor(...args: NFTAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTAuction> {
    return super.deploy(_nftContract, overrides || {}) as Promise<NFTAuction>;
  }
  override getDeployTransaction(
    _nftContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftContract, overrides || {});
  }
  override attach(address: string): NFTAuction {
    return super.attach(address) as NFTAuction;
  }
  override connect(signer: Signer): NFTAuction__factory {
    return super.connect(signer) as NFTAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAuctionInterface {
    return new utils.Interface(_abi) as NFTAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTAuction {
    return new Contract(address, _abi, signerOrProvider) as NFTAuction;
  }
}
